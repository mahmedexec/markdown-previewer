{"version":3,"sources":["Components/Previewer.js","Components/Editor.js","App.js","index.js"],"names":["Previewer","className","id","dangerouslySetInnerHTML","__html","marked","this","props","onClick","Component","Editor","textareaVal","document","getElementById","value","strMarkdown","handleChange","type","placeholder","onChange","event","target","App","markdown","setState","console","log","state","React","ReactDOM","render","StrictMode"],"mappings":"iVAgBeA,E,uKAXX,OACE,yBACEC,UAAU,MACVC,GAAG,UACHC,wBAAyB,CACvBC,OAAQC,IAAOC,KAAKC,MAAMC,gB,GAPZC,aCqBTC,G,wLApBX,IAAMC,EAAeC,SAASC,eAAe,UAAUC,MAAQC,EAC/DT,KAAKC,MAAMS,aAAaL,K,+BAEhB,IAAD,OACP,OACE,yBAAKV,UAAU,SACb,8BACEC,GAAG,SACHe,KAAK,WACLhB,UAAU,uCACViB,YAAY,uBACZC,SAAU,SAACC,GACT,EAAKb,MAAMS,aAAaI,EAAMC,OAAOP,e,GAd5BL,cAuBfM,EACJ,4qCCaaO,E,kDAjCb,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IAKRS,aAAe,SAACO,GACd,EAAKC,SAAS,CACZD,aAEFE,QAAQC,IAAI,EAAKC,MAAMJ,WARvB,EAAKI,MAAQ,CACXJ,SAAU,IAHK,E,qDAcjB,OACE,yBAAKtB,UAAU,iCACb,uBAAGA,UAAU,wCAAb,sBAGA,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,gBAAd,UACA,kBAAC,EAAD,CAAQe,aAAcV,KAAKU,gBAE7B,yBAAKf,UAAU,oBACb,wBAAIA,UAAU,gBAAd,aACA,kBAAC,EAAD,CAAWO,QAASF,KAAKqB,MAAMJ,kB,GA3BzBK,IAAMnB,WCCxBoB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFnB,SAASC,eAAe,W","file":"static/js/main.1666c149.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport marked from \"marked\";\r\n\r\nclass Previewer extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"p-3\"\r\n        id=\"preview\"\r\n        dangerouslySetInnerHTML={{\r\n          __html: marked(this.props.onClick),\r\n        }}\r\n      ></div>\r\n    );\r\n  }\r\n}\r\nexport default Previewer;\r\n","import React, { Component } from \"react\";\r\nimport \"./Editor.css\";\r\nclass Editor extends Component {\r\n  componentDidMount() {\r\n    const textareaVal = (document.getElementById(\"editor\").value = strMarkdown);\r\n    this.props.handleChange(textareaVal);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"h-100\">\r\n        <textarea\r\n          id=\"editor\"\r\n          type=\"text-box\"\r\n          className=\"container-fluid border border-white \"\r\n          placeholder=\"Start typing here...\"\r\n          onChange={(event) => {\r\n            this.props.handleChange(event.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Editor;\r\nconst strMarkdown =\r\n  \"# Welcome to my React Markdown Previewer!\\n\" +\r\n  \"\\n\" +\r\n  \"## This is a sub-heading...\\n\" +\r\n  \"### And here's some other cool stuff:\\n\" +\r\n  \"  \\n\" +\r\n  \"Heres some code, `<div></div>`, between 2 backticks.\\n\" +\r\n  \"\\n\" +\r\n  \"```\\n\" +\r\n  \"// this is multi-line code:\\n\" +\r\n  \"\\n\" +\r\n  \"function anotherExample(firstLine, lastLine) {\\n\" +\r\n  \"  if (firstLine == '```' && lastLine == '```') {\\n\" +\r\n  \"    return multiLineCode;\\n\" +\r\n  \"  }\\n\" +\r\n  \"}\\n\" +\r\n  \"```\\n\" +\r\n  \"  \\n\" +\r\n  \"You can also make text **bold**... whoa!\\n\" +\r\n  \"Or _italic_.\\n\" +\r\n  \"Or... wait for it... **_both!_**\\n\" +\r\n  \"And feel free to go crazy ~~crossing stuff out~~.\\n\" +\r\n  \"\\n\" +\r\n  \"There's also [links](https://www.freecodecamp.com), and\\n\" +\r\n  \"> Block Quotes!\\n\" +\r\n  \"\\n\" +\r\n  \"And if you want to get really crazy, even tables:\\n\" +\r\n  \"\\n\" +\r\n  \"Wild Header | Crazy Header | Another Header?\\n\" +\r\n  \"------------ | ------------- | ------------- \\n\" +\r\n  \"Your content can | be here, and it | can be here....\\n\" +\r\n  \"And here. | Okay. | I think we get it.\\n\" +\r\n  \"\\n\" +\r\n  \"- And of course there are lists.\\n\" +\r\n  \"  - Some are bulleted.\\n\" +\r\n  \"     - With different indentation levels.\\n\" +\r\n  \"        - That look like this.\\n\" +\r\n  \"\\n\" +\r\n  \"\\n\" +\r\n  \"1. And there are numbererd lists too.\\n\" +\r\n  \"1. Use just 1s if you want! \\n\" +\r\n  \"1. But the list goes on...\\n\" +\r\n  \"- Even if you use dashes or asterisks.\\n\" +\r\n  \"* And last but not least, let's not forget embedded images:\\n\" +\r\n  \"\\n\" +\r\n  \"![React Logo w/ Text](https://goo.gl/Umyytc)\";\r\n","import \"./App.css\";\nimport React from \"react\";\nimport Previewer from \"./Components/Previewer\";\nimport Editor from \"./Components/Editor\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      markdown: \"\",\n    };\n  }\n  handleChange = (markdown) => {\n    this.setState({\n      markdown,\n    });\n    console.log(this.state.markdown);\n  };\n\n  render() {\n    return (\n      <div className=\"container-fluid fill-viewport\">\n        <p className=\"title h1 text-responsive text-center\">\n          Markdown Previewer\n        </p>\n        <div className=\"row p-3 h-100 no-gutters\">\n          <div className=\"card col-sm m-1 \">\n            <h4 className=\"card-header \">Editor</h4>\n            <Editor handleChange={this.handleChange} />\n          </div>\n          <div className=\"card col-sm m-1 \">\n            <h4 className=\"card-header \">Previewer</h4>\n            <Previewer onClick={this.state.markdown}></Previewer>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}